ECLIPSE ANDROID PROJECT IMPORT SUMMARY
======================================

Ignored Files:
--------------
The following files were *not* copied into the new Gradle project; you
should evaluate whether these are still needed in your project and if
so manually move them:

* ant.properties
* build.xml
* ic_launcher-web.png

Moved Files:
------------
Android Gradle projects use a different directory structure than ADT
Eclipse projects. Here's how the projects were restructured:

* AndroidManifest.xml => app/src/main/AndroidManifest.xml
* assets/ => app/src/main/assets/
* libs/TuSDKCore-2.8.1.jar => app/libs/TuSDKCore-2.8.1.jar
* libs/TuSDKFace-1.0.0.jar => app/libs/TuSDKFace-1.0.0.jar
* libs/TuSDKVideo-1.7.0.jar => app/libs/TuSDKVideo-1.7.0.jar
* libs/android-support-v4-23.1.2.jar => app/libs/android-support-v4-23.1.2.jar
* libs/android-support-v7-recyclerview.jar => app/libs/android-support-v7-recyclerview.jar
* libs/arm64-v8a/libtusdk-face.so => app/src/main/jniLibs/arm64-v8a/libtusdk-face.so
* libs/arm64-v8a/libtusdk-image.so => app/src/main/jniLibs/arm64-v8a/libtusdk-image.so
* libs/arm64-v8a/libtusdk-library.so => app/src/main/jniLibs/arm64-v8a/libtusdk-library.so
* libs/armeabi-v7a/libtusdk-face.so => app/src/main/jniLibs/armeabi-v7a/libtusdk-face.so
* libs/armeabi-v7a/libtusdk-image.so => app/src/main/jniLibs/armeabi-v7a/libtusdk-image.so
* libs/armeabi-v7a/libtusdk-library.so => app/src/main/jniLibs/armeabi-v7a/libtusdk-library.so
* libs/armeabi/libtusdk-face.so => app/src/main/jniLibs/armeabi/libtusdk-face.so
* libs/armeabi/libtusdk-image.so => app/src/main/jniLibs/armeabi/libtusdk-image.so
* libs/armeabi/libtusdk-library.so => app/src/main/jniLibs/armeabi/libtusdk-library.so
* libs/bugly_crash_release_2.6.5.jar => app/libs/bugly_crash_release_2.6.5.jar
* libs/mips/libtusdk-face.so => app/src/main/jniLibs/mips/libtusdk-face.so
* libs/mips/libtusdk-image.so => app/src/main/jniLibs/mips/libtusdk-image.so
* libs/mips/libtusdk-library.so => app/src/main/jniLibs/mips/libtusdk-library.so
* libs/mips64/libtusdk-face.so => app/src/main/jniLibs/mips64/libtusdk-face.so
* libs/mips64/libtusdk-image.so => app/src/main/jniLibs/mips64/libtusdk-image.so
* libs/mips64/libtusdk-library.so => app/src/main/jniLibs/mips64/libtusdk-library.so
* libs/universal-image-loader-1.9.4.jar => app/libs/universal-image-loader-1.9.4.jar
* libs/x86/libtusdk-face.so => app/src/main/jniLibs/x86/libtusdk-face.so
* libs/x86/libtusdk-image.so => app/src/main/jniLibs/x86/libtusdk-image.so
* libs/x86/libtusdk-library.so => app/src/main/jniLibs/x86/libtusdk-library.so
* libs/x86_64/libtusdk-face.so => app/src/main/jniLibs/x86_64/libtusdk-face.so
* libs/x86_64/libtusdk-image.so => app/src/main/jniLibs/x86_64/libtusdk-image.so
* libs/x86_64/libtusdk-library.so => app/src/main/jniLibs/x86_64/libtusdk-library.so
* lint.xml => app/lint.xml
* proguard-project.txt => app/proguard-project.txt
* res/ => app/src/main/res/
* src/ => app/src/main/java/

Next Steps:
-----------
You can now build the project. The Gradle project needs network
connectivity to download dependencies.

Bugs:
-----
If for some reason your project does not build, and you determine that
it is due to a bug or limitation of the Eclipse to Gradle importer,
please file a bug at http://b.android.com with category
Component-Tools.

(This import summary is for your information only, and can be deleted
after import once you are satisfied with the results.)
